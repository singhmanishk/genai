import sqlite3

# Connect to SQLite
conn = sqlite3.connect("chat.db")
cursor = conn.cursor()

# Create table with auto-increment global threadid
cursor.execute("""
CREATE TABLE IF NOT EXISTS session_thread (
    sessionid TEXT NOT NULL,
    route TEXT NOT NULL,
    threadid INTEGER PRIMARY KEY AUTOINCREMENT,
    UNIQUE(sessionid, route)
)
""")
conn.commit()

def insert_session_thread(sessionid: str, route: str) -> int:
    """
    Inserts a new (sessionid, route) with a globally unique auto-incremented threadid.
    If it already exists, returns the existing threadid.
    """
    # Check if the pair exists
    cursor.execute("""
        SELECT threadid
        FROM session_thread
        WHERE sessionid = ? AND route = ?
    """, (sessionid, route))
    row = cursor.fetchone()
    
    if row:
        return row[0]  # Return existing threadid

    # Insert new row (threadid auto-generated by SQLite)
    cursor.execute("""
        INSERT INTO session_thread (sessionid, route)
        VALUES (?, ?)
    """, (sessionid, route))
    conn.commit()

    return cursor.lastrowid  # Return the new threadid

# Example usage
print(insert_session_thread("sess1", "payment"))  # → 1
print(insert_session_thread("sess1", "payment"))  # → 1 (same as before)
print(insert_session_thread("sess1", "order"))    # → 2
print(insert_session_thread("sess2", "payment"))  # → 3
print(insert_session_thread("sess1", "order"))    # → 2 (same as before)

# Check table contents
cursor.execute("SELECT * FROM session_thread ORDER BY threadid")
for row in cursor.fetchall():
    print(row)

conn.close()
